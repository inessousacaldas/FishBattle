// **********************************************************************
// Copyright (c) 2016 Baoyugame. All rights reserved.
// Author : Fish
// Created : 12/02/2016 14:34:05
// Desc	: Auto generated by MarsZ. update this if need.
// **********************************************************************

using System;
using AppDto;

/// <summary>
/// This is the controller class for module FullServiceAnnouncement, use this to control the ui or view , such as it's init , update or dispose.
/// @Fish in 12/02/2016 14:34:05
/// </summary>
public class FullServiceAnnouncementController  : MonoViewController<FullServiceAnnouncementView>
{
	#region property and field

	#region const

	#endregion

	#region ui object

	#endregion

	#region data

	#endregion

	#endregion

	#region interface functions


	//移除所有界面事件，包括但不限于数据监听事件。
	protected override void OnDispose()
	{
		JSTimer.Instance.CancelCd(TimeName);
		base.OnDispose();
	}

	#endregion

	#region Event Handlers

	#endregion

	#region Public or open interface

	#endregion

	#region Update global info data


	#endregion

	#region Update global UI

	public void ShowAnnouncementCallback(){
        
		if (_view == null)
			return;
		var time = 0f;
		if (!_view.CheckCanShowAnnouncement(out time)) {
			return;
		}
		// CHECK DATA

		//跑马灯的时候，暂定弹幕播放，跑马灯结束再继续播放
		ProxyBarrageModule.SetBarragePause(true);
		var _notify = FullServiceAnnouncementModel.Instance.GetMarqueeNoticeNotify();
		ShowAnnouncement (_notify);
	}

	private static string TimeName = "PunishDelayTimer";
	private void delay(Action finishCB, float time){
		JSTimer.Instance.CancelCd(TimeName);
		if (time > 0) {
			JSTimer.Instance.SetupCoolDown (TimeName, time, null, () => {
				GameUtil.SafeRun (finishCB);
			});
		} else {
			GameUtil.SafeRun (finishCB);
		}

	}
        
	private void FinishShow(){
		JSTimer.Instance.CancelCd (TimeName);
		ProxyFullServiceAnnouncement.Close ();
		//继续弹幕播放
		ProxyBarrageModule.SetBarragePause(false);
	}

	private void ShowAnnouncement(MarqueeNoticeNotify notify){   
		if (notify == null){
			var time = _view.CalLabelTweenFinish();
			if (time - 0.0001f <= 0f) {
				FinishShow ();
			}else {
				delay (delegate {
					var _notify = FullServiceAnnouncementModel.Instance.GetMarqueeNoticeNotify();
					ShowAnnouncement (_notify);
				}, time);
			}
		}
		else{
			var time = _view.ShowAnnouncement (notify);
			delay (delegate {
				var _notify = FullServiceAnnouncementModel.Instance.GetMarqueeNoticeNotify();
				ShowAnnouncement (_notify);    
			}, time);
		}
	}


	#endregion
}
