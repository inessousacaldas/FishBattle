// **********************************************************************
// Copyright (c)  Baoyugame. All rights reserved.
// File     :  ChatViewController.cs
// the file is generated by tools
// **********************************************************************


using UniRx;

public partial interface IChatViewController
{
     UniRx.IObservable<Unit> OnSpeedOrInputBtn_UIButtonClick{get;}
     UniRx.IObservable<Unit> OnExpression_UIButtonClick{get;}
     UniRx.IObservable<Unit> OnSendBtn_UIButtonClick{get;}
     UniRx.IObservable<Unit> OnApplyGuideBtn_UIButtonClick{get;}
     UniRx.IObservable<Unit> OnUnReadBtn_UIButtonClick{get;}
     UniRx.IObservable<Unit> OnAtFuncBtn_UIButtonClick { get; }
     UniRx.IObservable<Unit> OnHornBtn_UIButtonClick { get; }
     UniRx.IObservable<Unit> OnHornChooseBtn_UIButtonClick { get; }
     UniRx.IObservable<Unit> OnHornCloseBtn_UIButtonClick { get; }
}

public partial class ChatViewController:MonolessViewController<ChatView>, IChatViewController
{
    //机器自动生成的事件绑定
    protected override void InitReactiveEvents(){
        SpeedOrInputBtn_UIButtonEvt = View.SpeedOrInputBtn_UIButton.AsObservable();
        Expression_UIButtonEvt = View.Expression_UIButton.AsObservable();
        SendBtn_UIButtonEvt = View.SendBtn_UIButton.AsObservable();
        ApplyGuideBtn_UIButtonEvt = View.ApplyGuideBtn_UIButton.AsObservable();
        UnReadBtn_UIButtonEvt = View.UnReadBtn_UIButton.AsObservable();
        AtFuncBtn_UIButtonEvt = View.atFuncBtn_UIButton.AsObservable();
        HortBtn_UIButtonEvt = View.HornBtn_UIButton.AsObservable();
        HornChooseBtn_UIButtonEvt = View.chooseBtn.AsObservable();
        HornCloseBtn_UIButtonEvt = View.hornCloseBtn.AsObservable();
    }

    protected override void ClearReactiveEvents(){
        SpeedOrInputBtn_UIButtonEvt = SpeedOrInputBtn_UIButtonEvt.CloseOnceNull();
        Expression_UIButtonEvt = Expression_UIButtonEvt.CloseOnceNull();
        SendBtn_UIButtonEvt = SendBtn_UIButtonEvt.CloseOnceNull();
        ApplyGuideBtn_UIButtonEvt = ApplyGuideBtn_UIButtonEvt.CloseOnceNull();
        UnReadBtn_UIButtonEvt = UnReadBtn_UIButtonEvt.CloseOnceNull();
        AtFuncBtn_UIButtonEvt = AtFuncBtn_UIButtonEvt.CloseOnceNull();
        HortBtn_UIButtonEvt = HortBtn_UIButtonEvt.CloseOnceNull();
        HornChooseBtn_UIButtonEvt = HornChooseBtn_UIButtonEvt.CloseOnceNull();
        HornCloseBtn_UIButtonEvt = HornCloseBtn_UIButtonEvt.CloseOnceNull();
    }

    private Subject<Unit> SpeedOrInputBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnSpeedOrInputBtn_UIButtonClick{
        get {return SpeedOrInputBtn_UIButtonEvt;}
    }

    private Subject<Unit> Expression_UIButtonEvt;
    public UniRx.IObservable<Unit> OnExpression_UIButtonClick{
        get {return Expression_UIButtonEvt;}
    }

    private Subject<Unit> SendBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnSendBtn_UIButtonClick{
        get {return SendBtn_UIButtonEvt;}
    }

    private Subject<Unit> ApplyGuideBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnApplyGuideBtn_UIButtonClick{
        get {return ApplyGuideBtn_UIButtonEvt;}
    }

    private Subject<Unit> UnReadBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnUnReadBtn_UIButtonClick{
        get {return UnReadBtn_UIButtonEvt;}
    }

    private Subject<Unit> AtFuncBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnAtFuncBtn_UIButtonClick
    {
        get { return AtFuncBtn_UIButtonEvt; }
    }

    private Subject<Unit> HortBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnHornBtn_UIButtonClick
    {
        get { return HortBtn_UIButtonEvt; }
    }

    private Subject<Unit> HornChooseBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnHornChooseBtn_UIButtonClick
    {
        get { return HornChooseBtn_UIButtonEvt; }
    }

    private Subject<Unit> HornCloseBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnHornCloseBtn_UIButtonClick
    {
        get { return HornCloseBtn_UIButtonEvt; }
    }
}
