// **********************************************************************
// Copyright (c) 2016 Baoyugame. All rights reserved.
// Author : MarsZ
// Created : 04/01/2017 10:27:45
// Desc	: Auto generated by MarsZ. update this if need.
// **********************************************************************

using UnityEngine;
using System.Collections.Generic;
using AppDto;
using AppServices;
using System.Collections;
using System;

/// <summary>
/// 武将半身像
/// @MarsZ in 04/01/2017 10:27:45
/// </summary>
public class HeroCardItemController : MonolessViewController<HeroCardItem>
{
    #region property and field

    public Action<HeroCardItemController,long> OnClickHandler{ get; set; }

    #region const

    #endregion


    #region data

    public long HeroUID{ get; private set; }

    #endregion

    #endregion

    #region interface functions

    /// <summary>
    /// 界面就绪后初始化，一个UI生命周期只会执行一次
    /// </summary>
    protected override void AfterInitView()
    {
        InitUI();
        Show();
    }

    //添加事件监听 在gameeventlistener和eventlistener中添加的回调不需要自己remove，所以没有一个相应的RemoveCustomEvent函数
    protected override void RegistCustomEvent()
    {
        EventDelegate.Set(View.HeroCardItem_UIButton.onClick, OnHeroCardClickHandler);
    }

    //收到界面销毁后的回收处理，比如引用置空等
    protected override void OnDispose()
    {
        InitUI();
        Hide();
    }

    #endregion

    #region Event Handlers

    private void OnHeroCardClickHandler()
    {
        if (null != OnClickHandler)
            OnClickHandler(this, HeroUID);
    }

    #endregion

    #region Public or open interface

    /// <summary>
    /// 更新界面的全部数据和显示
    /// </summary>
    public virtual void UpdateData(long pHeroUID)
    {
        HeroUID = pHeroUID;
        UpdateAllUI();
    }

    #endregion

    #region Update global UI

    private void UpdateAllUI()
    {
        string tName = string.Empty;
        string tIcon = string.Empty;
        int tLv = 0;
        string tCountrySprite = string.Empty;
        GameDebuger.LogError(string.Format("[TEMP]获取人物具体信息，mHeroUID：{0}", HeroUID));
        tName = string.Format("N{0}", HeroUID);
        tLv = (int)HeroUID % 100;
        tCountrySprite = string.Format("ICON_{0}", HeroUID % 4 + 1);
        tIcon = (5001 + HeroUID).ToString();

        View.LabelName_UILabel.text = tName;
        View.LabelLv_UILabel.text = tLv.ToString();
        View.SpriteCountry_UISprite.spriteName = tCountrySprite;
        UIHelper.SetPetIcon(View.HeadIcon_UISprite, tIcon);
    }

    protected virtual void InitUI()
    {
        Selected = false;
        DragEnable = true;
        HeroUID = 0;
    }

    #endregion

    #region 拖动

    private bool mDragEnable = true;

    public bool DragEnable
    {
        get
        { 
            return mDragEnable;
        }
        set
        {
            if (mDragEnable != value)
            {
                mDragEnable = value;
                View.HeroCardItem_UIDragScrollView.enabled = mDragEnable;
            }
        }
    }

    #endregion

    #region 选中

    private bool mSelected = true;

    public bool Selected
    {
        get
        { 
            return mSelected;
        }
        set
        {
            if (mSelected != value)
            {
                mSelected = value;
                View.SpriteSelected_UISprite.alpha = mSelected ? 1f : 0f;
            }
        }
    }

    #endregion
}
