// **********************************************************************
// Copyright (c)  Baoyugame. All rights reserved.
// File     :  BattleOrderUIContorllerController.cs
// the file is generated by tools
// **********************************************************************


using System;
using UniRx;
using UnityEngine;

public partial interface IBattleOrderViewContorller
{
     UniRx.IObservable<GameObject> OnMoveButton_UIButtonClick{get;}
     UniRx.IObservable<GameObject> OnMagicButton_UIButtonClick{get;}
     UniRx.IObservable<GameObject> OnEscapeButton_UIButtonClick{get;}
     UniRx.IObservable<GameObject> OnAttackButton_UIButtonClick{get;}
     UniRx.IObservable<GameObject> OnUserItemButton_UIButtonClick{get;}
     UniRx.IObservable<GameObject> OnSkillButton_UIButtonClick{get;}

}

public partial class BattleOrderViewContorller:MonolessViewController<BattleOrderUIContorller>, IBattleOrderViewContorller
{
    //机器自动生成的事件绑定
    protected override void InitReactiveEvents(){
        MoveButton_UIButtonEvt = View.MoveButton_UIButton.AsObservableWithGameObject();
        MagicButton_UIButtonEvt = View.MagicButton_UIButton.AsObservableWithGameObject();
        EscapeButton_UIButtonEvt = View.EscapeButton_UIButton.AsObservableWithGameObject();
        AttackButton_UIButtonEvt = View.AttackButton_UIButton.AsObservableWithGameObject();
        UserItemButton_UIButtonEvt = View.UserItemButton_UIButton.AsObservableWithGameObject();
        SkillButton_UIButtonEvt = View.SkillButton_UIButton.AsObservableWithGameObject();
        CallButton_UIButtonEvt = View.CallButton_UIButton.AsObservable();
    }

    protected override void ClearReactiveEvents(){
        MoveButton_UIButtonEvt = MoveButton_UIButtonEvt.CloseOnceNull();
        MagicButton_UIButtonEvt = MagicButton_UIButtonEvt.CloseOnceNull();
        EscapeButton_UIButtonEvt = EscapeButton_UIButtonEvt.CloseOnceNull();
        AttackButton_UIButtonEvt = AttackButton_UIButtonEvt.CloseOnceNull();
        UserItemButton_UIButtonEvt = UserItemButton_UIButtonEvt.CloseOnceNull();
        SkillButton_UIButtonEvt = SkillButton_UIButtonEvt.CloseOnceNull();
        CallButton_UIButtonEvt = CallButton_UIButtonEvt.CloseOnceNull();
    }

    private Subject<GameObject> MoveButton_UIButtonEvt;
    public UniRx.IObservable<GameObject> OnMoveButton_UIButtonClick{
        get {return MoveButton_UIButtonEvt;}
    }

    private Subject<GameObject> MagicButton_UIButtonEvt;
    public UniRx.IObservable<GameObject> OnMagicButton_UIButtonClick{
        get {return MagicButton_UIButtonEvt;}
    }

    private Subject<GameObject> EscapeButton_UIButtonEvt;
    public UniRx.IObservable<GameObject> OnEscapeButton_UIButtonClick{
        get {return EscapeButton_UIButtonEvt;}
    }

    private Subject<GameObject> AttackButton_UIButtonEvt;
    public UniRx.IObservable<GameObject> OnAttackButton_UIButtonClick{
        get {return AttackButton_UIButtonEvt;}
    }

    private Subject<GameObject> UserItemButton_UIButtonEvt;
    public UniRx.IObservable<GameObject> OnUserItemButton_UIButtonClick{
        get {return UserItemButton_UIButtonEvt;}
    }

    private Subject<GameObject> SkillButton_UIButtonEvt;
    public UniRx.IObservable<GameObject> OnSkillButton_UIButtonClick{
        get {return SkillButton_UIButtonEvt;}
    }


    /// <summary>
    /// 召唤消息事件
    /// </summary>
    private Subject<Unit> CallButton_UIButtonEvt;
    public UniRx.IObservable<Unit> OnCallButton_UIButtonClick
    {
        get { return CallButton_UIButtonEvt; }
    }




}
