// **********************************************************************
// Copyright (c) 2016 Baoyugame. All rights reserved.
// Author : MarsZ
// Created : 03/30/2017 20:20:15
// Desc	: Auto generated by MarsZ. update this if need.
// **********************************************************************

using UnityEngine;
using System.Collections.Generic;
using AppDto;
using AppServices;
using System.Collections;
using System;

/// <summary>
/// 武将头像、背景、名字
/// @MarsZ in 03/30/2017 20:20:15
/// </summary>
public class HeroHeadItemController : MonolessViewController <HeroHeadItem>
{
    #region property and field

    public Action<HeroHeadItemController,long> OnClickHandler{ get; set; }

    #region const

    #endregion


    #region data

    private long mHeroUID;
    private PlayerDto mPlayerDto;
    private GeneralCharactor mGeneralCharactor;
    private string mIcon;
    private string mName;

    #endregion

    #endregion

    #region interface functions

    /// <summary>
    /// 界面就绪后初始化，一个UI生命周期只会执行一次
    /// </summary>
    protected override void AfterInitView()
    {
        InitData();
    }

    //添加事件监听 在gameeventlistener和eventlistener中添加的回调不需要自己remove，所以没有一个相应的RemoveCustomEvent函数
    protected override void RegistCustomEvent()
    {
        EventDelegate.Set(View.HeroHeadItem_UIButton.onClick, OnHeadClickHandler);
    }

    //收到界面销毁后的回收处理，比如引用置空等
    protected override void OnDispose()
    {
        InitData();
    }

    #endregion

    #region Event Handlers

    private void OnHeadClickHandler()
    {
        if (null != OnClickHandler)
            OnClickHandler(this, mHeroUID);
    }

    #endregion

    #region Public or open interface

    /// <summary>
    /// 更新界面的全部数据和显示
    /// </summary>
    public void UpdateData(long pHeroUID)
    {
        mHeroUID = pHeroUID;
        UpdateAllUI();
    }

    public void UpdateData(PlayerDto pPlayerDto)
    {
        mPlayerDto = pPlayerDto;
        mIcon = mName = string.Empty;
        if (null != mPlayerDto && null != mPlayerDto.charactor)
        {
            mIcon = mPlayerDto.charactor.texture.ToString();
            mName = mPlayerDto.name;
        }
        UpdateAllUI();
    }

    public void UpdateData(TeamMemberSimpleDto dto){
        ShowName = false;
        mHeroUID = dto.id;
        UpdateData(dto.charactor);
    }
    public void UpdateData(GeneralCharactor pGeneralCharactor)
    {
        mGeneralCharactor = pGeneralCharactor;
        mIcon = mName = string.Empty;
        if (null != mGeneralCharactor)
        {
            mIcon = mGeneralCharactor.texture.ToString();
            mName = mGeneralCharactor.name;
        }
        UpdateAllUI();
    }

    public void UpdateWithNullData()
    {
        this.gameObject.SetActive(false);
    }

    private void InitData()
    {
        mHeroUID = 0L;
        ShowName = false;
        mIcon = mName = string.Empty;
    }
    #endregion

    #region Update global UI

    private void UpdateAllUI()
    {
        UIHelper.SetPetIcon(View.HeroHeadItem_UISprite, mIcon);
        if (ShowName)
            View.LabelName_UILabel.text = mName;
    }

    #endregion

    private bool mShowName = true;

    public bool ShowName
    {
        get
        { 
            return mShowName;
        }
        set
        { 
            if (mShowName != value)
            {
                mShowName = value;
                UpdateNameLabelVisible(mShowName);
            }
        }
    }

    private void UpdateNameLabelVisible(bool pVisible)
    {
        View.LabelName_UILabel.alpha = pVisible ? 1f : 0f;
    }
}
