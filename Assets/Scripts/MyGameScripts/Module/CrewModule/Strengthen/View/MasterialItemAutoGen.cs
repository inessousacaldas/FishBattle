//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections;
using AppDto;

/// <summary>
/// Generates a safe wrapper for MasterialItem.
/// </summary>
public partial class MasterialItem : BaseView
{
	public const string NAME ="MasterialItem";
	public UISprite MasterialIcon_UISprite;
	public UISprite AddSprite_UISprite;
	public UIButton AddSprite_UIButton;
	public UILabel CountLabel_UILabel;
    public UISprite MasterialItem_UISprite;

	protected override void InitElementBinding ()
	{
		var root = this.gameObject.transform;

        MasterialIcon_UISprite = root.Find("MasterialIcon").GetComponent<UISprite>();
		AddSprite_UISprite = root.Find("AddSprite").GetComponent<UISprite>();
		AddSprite_UIButton = root.Find("AddSprite").GetComponent<UIButton>();
		CountLabel_UILabel = root.Find("CountLabel").GetComponent<UILabel>();
	    MasterialItem_UISprite = root.GetComponent<UISprite>();

	}
}

public partial class MasterialItemController : MonolessViewController<MasterialItem>
{

    public void SetStrengthInfo(int consumeCount, Crew crew,int chipCount)
    {
        var item = DataCache.getDtoByCls<GeneralItem>(crew.chipId) as AppVirtualItem;
        if (item != null)
        {
            UIHelper.SetItemIcon(_view.MasterialIcon_UISprite, item.icon);
        }
        var _chiCount = chipCount < consumeCount ? chipCount.ToString().WrapColor(ColorConstantV3.Color_Red_Str) : chipCount.ToString();
        _view.CountLabel_UILabel.text = string.Format(_chiCount.ToString() + "/" + consumeCount.ToString());
        _view.AddSprite_UISprite.gameObject.SetActive(chipCount < consumeCount);
    }

    public void SetSilverInfo(int count)
    {
        var silver = DataCache.getDtoByCls<GeneralItem>((int) AppVirtualItem.VirtualItemEnum.SILVER) as AppVirtualItem;
        if (silver == null)
        {
            GameDebuger.LogError(string.Format("AppVirtualItem找不到{0}", AppVirtualItem.VirtualItemEnum.SILVER));
            return;
        }
        var _realcount = ModelManager.Player.GetPlayerWealthSilver();
        UIHelper.SetItemIcon(_view.MasterialIcon_UISprite, silver.icon.ToString());
        _view.CountLabel_UILabel.text = count.ToString();
        _view.AddSprite_UISprite.gameObject.SetActive((int)_realcount < count);
        _view.MasterialIcon_UISprite.isGrey = (int)_realcount < count;
    }

    public void SetInfo(int realCount, int consumeCount)
    {
        var props = DataCache.getDtoByCls<GeneralItem>(realCount) as Props;
        if (props == null)
        {
            GameDebuger.LogError(string.Format("Props表找不到{0}", realCount));
            return;
        }
        var _iconName = props.icon;
        UIHelper.SetItemIcon(_view.MasterialIcon_UISprite, _iconName);
        int count = BackpackDataMgr.DataMgr.GetItemCountByItemID(realCount);
        string _showCount = count < consumeCount ? count.ToString().WrapColor(ColorConstantV3.Color_Red_Str) : count.ToString();

        _view.CountLabel_UILabel.text = string.Format(_showCount+"/" + consumeCount.ToString());
        _view.AddSprite_UISprite.gameObject.SetActive(count < consumeCount);
        _view.MasterialIcon_UISprite.isGrey = count < consumeCount;
    }
 
}
