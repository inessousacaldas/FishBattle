// **********************************************************************
// Copyright (c)  Baoyugame. All rights reserved.
// File     :  CrewPassiveSkillViewController.cs
// the file is generated by tools
// **********************************************************************


using UniRx;

public partial interface ICrewPassiveSkillViewController
{
     UniRx.IObservable<Unit> OnForgetBtn_UIButtonClick{get;}
     UniRx.IObservable<Unit> OnUseBtn_UIButtonClick{get;}
     UniRx.IObservable<Unit> OnUpBtn_UIButtonClick{get;}
     UniRx.IObservable<Unit> OnEquipBtn_UIButtonClick{get;}
     UniRx.IObservable<Unit> OnbtnWindowForget_UIButtonClick{get;}
     UniRx.IObservable<Unit> OnbtnCancel_UIButtonClick{get;}
     UniRx.IObservable<Unit> OnBlackBG_UIButtonClick{get;}

}

public partial class CrewPassiveSkillViewController:MonolessViewController<CrewPassiveSkillView>, ICrewPassiveSkillViewController
{
    //机器自动生成的事件绑定
    protected override void InitReactiveEvents(){
        ForgetBtn_UIButtonEvt = View.ForgetBtn_UIButton.AsObservable();
        UseBtn_UIButtonEvt = View.UseBtn_UIButton.AsObservable();
        UpBtn_UIButtonEvt = View.UpBtn_UIButton.AsObservable();
        EquipBtn_UIButtonEvt = View.EquipBtn_UIButton.AsObservable();
        btnWindowForget_UIButtonEvt = View.btnWindowForget_UIButton.AsObservable();
        btnCancel_UIButtonEvt = View.btnCancel_UIButton.AsObservable();
        BlackBG_UIButtonEvt = View.BlackBG_UIButton.AsObservable();

    }

    protected override void ClearReactiveEvents(){
        ForgetBtn_UIButtonEvt = ForgetBtn_UIButtonEvt.CloseOnceNull();
        UseBtn_UIButtonEvt = UseBtn_UIButtonEvt.CloseOnceNull();
        UpBtn_UIButtonEvt = UpBtn_UIButtonEvt.CloseOnceNull();
        EquipBtn_UIButtonEvt = EquipBtn_UIButtonEvt.CloseOnceNull();
        btnWindowForget_UIButtonEvt = btnWindowForget_UIButtonEvt.CloseOnceNull();
        btnCancel_UIButtonEvt = btnCancel_UIButtonEvt.CloseOnceNull();
        BlackBG_UIButtonEvt = BlackBG_UIButtonEvt.CloseOnceNull();

    }

    private Subject<Unit> ForgetBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnForgetBtn_UIButtonClick{
        get {return ForgetBtn_UIButtonEvt;}
    }

    private Subject<Unit> UseBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnUseBtn_UIButtonClick{
        get {return UseBtn_UIButtonEvt;}
    }

    private Subject<Unit> UpBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnUpBtn_UIButtonClick{
        get {return UpBtn_UIButtonEvt;}
    }

    private Subject<Unit> EquipBtn_UIButtonEvt;
    public UniRx.IObservable<Unit> OnEquipBtn_UIButtonClick{
        get {return EquipBtn_UIButtonEvt;}
    }

    private Subject<Unit> btnWindowForget_UIButtonEvt;
    public UniRx.IObservable<Unit> OnbtnWindowForget_UIButtonClick{
        get {return btnWindowForget_UIButtonEvt;}
    }

    private Subject<Unit> btnCancel_UIButtonEvt;
    public UniRx.IObservable<Unit> OnbtnCancel_UIButtonClick{
        get {return btnCancel_UIButtonEvt;}
    }

    private Subject<Unit> BlackBG_UIButtonEvt;
    public UniRx.IObservable<Unit> OnBlackBG_UIButtonClick{
        get {return BlackBG_UIButtonEvt;}
    }


}
