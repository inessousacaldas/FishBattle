// **********************************************************************
// Copyright (c) 2016 Baoyugame. All rights reserved.
// Author : CL-PC007
// Created : 7/24/2017 8:02:57 PM
// Desc	: Auto generated by MarsZ. update this if need.
// **********************************************************************
using AppDto;
using MyGameScripts.Gameplay.Player;
using UniRx;
using UnityEngine;

/// <summary>
/// This is the controller class for module CrewItem, use this to control the ui or view , such as it's init , update or dispose.
/// @CL-PC007 in 7/24/2017 8:02:57 PM
/// </summary>

public interface ICrewItemData
{
    int GetIdx { get; }
    long GetCrewId { get; }
    int GetId { get; }
}
public class CrewItemData: ICrewItemData
{
    private int _idx;
    public int GetIdx { get { return _idx; } }

    private long _crewId;
    public long GetCrewId { get { return _crewId; } }

    private int _id;
    public int GetId { get { return _id; } }

    public static CrewItemData Create(int idx, long crewId, int id)
    {
        CrewItemData data = new CrewItemData();
        data._idx = idx;
        data._crewId = crewId;
        data._id = id;
        return data;
    }
}
public class CrewItemController : MonolessViewController<CrewItem>
{
    private CompositeDisposable _disposable = new CompositeDisposable();

    private Subject<ICrewItemData> _clickEvt = new Subject<ICrewItemData>();
	public UniRx.IObservable<ICrewItemData> GetClickHandler {get { return _clickEvt; }}

	private long _uid = 0;
	private int _idx;
    private int _crewId;
    private CurListType _type = CurListType.None;
    public void SetItemInfo(CrewInfoDto data, int idx,  Crew.BattleCrewType state)
	{
	    _crewId = data.crewId;
	    _idx = idx;
        _uid = data.id;

        Crew crew = DataCache.getDtoByCls<GeneralCharactor>(data.crewId) as Crew;
        if (crew == null)
        {
            TipManager.AddTip(string.Format("======检查Crew表是否存在{0}=======", data.crewId));
            return;
        }
        _view.Desc_UILabel.text = string.Format("战斗力:{0}", (int)data.power);
        _view.Name_UILabel.text = data.hasExtName.Count > 0
            ? string.Format("{0}{1}", data.hasExtName[0], crew == null ? "" : crew.name)   //data.crewId有可能为0,所以需要加非空判断    ---xush
            : crew == null ? "" : crew.name;

        UIHelper.SetPetIcon(_view.Icon_UISprite, crew.icon);
        _view.Faction_UISprite.spriteName = crew.typeIcon;
        _view.Magic_UISprite.spriteName = GlobalAttr.GetMagicIcon(data.slotsElementLimit);
        _view.State_UISprite.gameObject.SetActive(state != (int)Crew.BattleCrewType.Default);

        switch (state)
        {
            case Crew.BattleCrewType.Default:
                _view.State_UISprite.spriteName = "";
                break;
            case Crew.BattleCrewType.MainCrew:
                _view.State_UISprite.spriteName = "flag_general";
                break;
            case Crew.BattleCrewType.AssistCrew:
                _view.State_UISprite.spriteName = "flag_auxiliary";
                break;
        }
	}

    public bool Select
    {
        get { return _view.Select; }
        set { _view.Select.SetActive(value);}
    }

    /// <summary>
    /// 界面就绪后初始化，一个UI生命周期只会执行一次
    /// </summary>
	protected override void AfterInitView ()
    {
        
    }

    //添加事件监听 在gameeventlistener和eventlistener中添加的回调不需要自己remove，所以没有一个相应的RemoveCustomEvent函数
	protected override void RegistCustomEvent ()
	{
        _disposable.Add(_view.PartnerItem_UIButton.AsObservable().Subscribe(_ =>
        {
            var data = CrewItemData.Create(_idx, _uid, _crewId);
            _clickEvt.OnNext(data);
        }));

	}
	
    //收到界面销毁后的回收处理，比如引用置空等
    protected override void OnDispose()
    {
        _disposable = _disposable.CloseOnceNull();
    }

    public Vector3 GetAnchorPos { get { return _view.Anchor_Transform.position; } }
}
