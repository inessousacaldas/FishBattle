// **********************************************************************
// Copyright (c) 2016 Baoyugame. All rights reserved.
// Author : CL-PC007
// Created : 7/7/2017 3:15:17 PM
// Desc	: Auto generated by MarsZ. update this if need.
// **********************************************************************

using AppDto;
using UniRx;

/// <summary>
/// This is the controller class for module TeamActivitySceneItem, use this to control the ui or view , such as it's init , update or dispose.
/// @CL-PC007 in 7/7/2017 3:15:17 PM
/// </summary>
public class TeamActivitySceneItemController : MonolessViewController<TeamActivitySceneItem>
{
    private TeamActionTarget _data;
    private int _id;
    
    private Subject<Unit> _clickEvt;
    public IObservable<Unit> OnClick
    {
        get { return _clickEvt; }
    }

    public TeamActionTarget GetItemData { get { return _data; } }
    public int GetId { get { return _id; } }
    public void Open(TeamActionTarget data = null)
    {
        _data = data;
        _id = _data.id;
        SetItemInfo();
    }

    protected override void AfterInitView ()
    {
        _clickEvt = gameObject.OnClickAsObservable();
    }

    //添加事件监听 在gameeventlistener和eventlistener中添加的回调不需要自己remove，所以没有一个相应的RemoveCustomEvent函数
	protected override void RegistCustomEvent ()
	{
	   
	}

    //收到界面销毁后的回收处理，比如引用置空等
    protected override void OnDispose()
    {
        _clickEvt.CloseOnceNull();
    }

    private void SetItemInfo()
    {
        if (_data == null) return;

//        View.Icon_UISprite.spriteName = _data.GetIcon;
        View.Name_UILabel.text = _data.name;
    }

    public void SetButton()
    {
        View.TeamActivitySceneItem_UIButton.state = UIButtonColor.State.Pressed;
    }

    public bool IsSelect
    {
        get { return _view.Select; }
        set { _view.Select.SetActive(value);}
    }
}
