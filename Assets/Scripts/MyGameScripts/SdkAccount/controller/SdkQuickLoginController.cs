// **********************************************************************
// Copyright (c) 2016 Baoyugame. All rights reserved.
// Author : Xianjian
// Created : 9/26/2016 11:53:06 AM
// Desc	: Auto generated by MarsZ. update this if need.
// **********************************************************************

using UnityEngine;
using System.Collections.Generic;
using SdkAccountDto;

 /// <summary>
 /// This is the controller class for module AccountQuickLogin, use this to control the ui or view , such as it's init , update or dispose.
 /// @Xianjian in 9/26/2016 11:53:06 AM
 /// </summary>
public class SdkQuickLoginController : MonoViewController<SdkQuickLoginView>
{
    #region property and field
    #region const
    #endregion
    
    private List<SdkLastAccountItemController> _lastItemList;
    private List<AccountDto> _accountList;
    private AccountDto _selectAccount;

    #endregion

    #region interface functions

    protected override void AfterInitView()
    {
        CreateLastListItem();
        RefreshAccount();
    }

    protected override void RegistCustomEvent()
    {
        EventDelegate.Set(View.PlatformBtn.onClick, OnDemiAccount);
        EventDelegate.Set(View.TencentBtn.onClick, OnTencentAccount);
        EventDelegate.Set(View.LoginBtn.onClick, OnLogin);
        EventDelegate.Set(View.LastAccountBtn.onClick, SwitchAccountGrid);
    }
    #endregion

    public void CreateLastListItem(int count=3)
    {
        _lastItemList = new List<SdkLastAccountItemController>();
        var prefab = AssetPipeline.ResourcePoolManager.Instance.LoadUI(SdkLastAccountItem.NAME) as GameObject;
        for(var i=0; i<count; ++i)
        {
            var com = AddChild<SdkLastAccountItemController, SdkLastAccountItem>(View.AccountGrid.gameObject, prefab);
            com.InitItem(i, OnSelectItem, OnDeleteItem);
            _lastItemList.Add(com);
        }
    }

    public void RefreshAccount()
    {
        _accountList = SdkAccountModel.Instance.GetLastAccount();
        for(int i = 0; i< _lastItemList.Count; ++i)
        {
            var com = _lastItemList[i];
            if(i < _accountList.Count)
            {
                com.RefreshShow(_accountList[i]);
                com.gameObject.SetActive(true);
            }
            else com.gameObject.SetActive(false);
        }

        if(_accountList.Count > 0) SetSelectAccount(_accountList[0]);
    }

    public void SetSelectAccount(AccountDto dto)
    {
        _selectAccount = dto;

        if (dto == null)
        {
            View.LastLabel.text = "";
            View.LastIcon.spriteName = "";
            return;
        }

        string spriteName = "account-icon";
        switch (dto.type)
        {
            case AccountDto.AccountType.device:
                break;

            case AccountDto.AccountType.phone:
                break;

            case AccountDto.AccountType.qq:
                break;

            case AccountDto.AccountType.weixin:
                break;
        }

        View.LastLabel.text = dto.name;
        View.LastIcon.spriteName = spriteName;
    }

    public void OnSelectItem(int index)
    {
        SetSelectAccount(_accountList[index]);
        SwitchAccountGrid();
    }

    public void OnDeleteItem(int index)
    {
        var deleteDto = _accountList[index];
        _accountList.RemoveAt(index);

        if(deleteDto == _selectAccount)
        {
            if(_accountList.Count <= 0)
            {
                SdkProxyModule.ClearModule();
                SdkProxyModule.OpenLogin();
                return;
            }
            SetSelectAccount(_accountList[0]);
            SwitchAccountGrid();
        }
        RefreshAccount();
    }

    private void OnLogin()
    {
        if (_selectAccount == null) return;
        SdkAccountModel.Instance.DoLogin(_selectAccount.name, _selectAccount.password,
            _selectAccount.type);
    }

    private void SwitchAccountGrid()
    {
        GameObject obj = View.AccountGrid.gameObject;
        obj.SetActive(!obj.activeSelf);
    }

    private void OnDemiAccount()
    {
        SdkProxyModule.OpenModule<SdkPlatformLoginController>(SdkPlatformLoginView.NAME);
    }

    private void OnTencentAccount()
    {
        QQLoginHelper.OpenLoginPage();
    }
}
