
// Generated By Gecko,if you need to edit it,extends it! 

using scg = global::System.Collections.Generic;
using System;
using System.IO;

using UnityEngine;
using System.Reflection;

using ProtoBuf;
using ProtoBuf.Meta;

namespace AppProtobuf{
	public static partial class ProtobufUtilsNet {		
		public static object parseTypedMessageFrom(byte[] data){
			object resultObject = null;
			try{
				GameObjectTypedMessage message = DeserializeProtobuf<GameObjectTypedMessage>(data);
				resultObject =  parseFrom(message.message_type_id,message.message_data );	
			}catch(Exception ex){
                Debug.LogException(ex);
			}
			return resultObject;	
		}
		
       public static object parseFrom(int message_type_id, byte[] data) {
		    //primitive
			if (message_type_id <= 100)
				return parsePrimitive(message_type_id,data);
			return parseObject(message_type_id,data);
		}
	
		static object parsePrimitive(int message_type_id, byte[] data){
			object resultObject = null;	
			try{
				switch (message_type_id){
				    case 1:
					    resultObject = DeserializeProtobuf<BooleanMessage>(data).value;
					    break;
				    case 2:
					    resultObject = DeserializeProtobuf<DoubleMessage>(data).value;
					    break;
				    case 3:
					    resultObject = DeserializeProtobuf<FloatMessage>(data).value;
					    break;
				    case 4:
					    resultObject = DeserializeProtobuf<Int32Message>(data).value;
					    break;
				    case 5:
					    resultObject = DeserializeProtobuf<Int64Message>(data).value;
					    break;
				    case 6:
					    resultObject = DeserializeProtobuf<StringMessage>(data).value;
					    break;
				}
			}catch (Exception ex){
                Debug.LogException(ex);
            }
			return resultObject;
		}		
	
		static object parseObject(int message_type_id, byte[] data){	
			Type defineClass = ProtobufMap.getClass(message_type_id);	
			if(defineClass==null)	
				return null;
			Type protobufType = ProtobufMapX.getClass(message_type_id);
			if(protobufType==null)
				return null;
            object sourceMessage = DeserializeProtobuf(data, protobufType);
			if(sourceMessage==null)		
				return null;	
			object destObject = null;
			try {
				destObject = Activator.CreateInstance( defineClass );
				ProtobufConverterNet.fillFrom(message_type_id, destObject,sourceMessage);	
			}catch(Exception ex){
                Debug.LogException(ex);
			}
			return destObject;
		}		

		public static byte[] packIntoData(object obj){	
			GameObjectTypedMessage builder = packInto(obj);		
			if(builder == null)		
				return null;	
			return GetByteFromProtoBuf(builder);
	    }
		
	   public static GameObjectTypedMessage packInto(object obj){
			int message_type_id = 0;
			byte[] message_data = null;
			Type obj_class = obj.GetType();
			GameObjectTypedMessage message = new GameObjectTypedMessage();
			if (obj_class == typeof(String)){	
				StringMessage strMsg = new StringMessage();
				strMsg.value = (String)obj;
				message_type_id = 6;
				message_data = GetByteFromProtoBuf(strMsg);
			}else if(obj_class.IsPrimitive){
				if(obj_class == typeof(Boolean)){
					BooleanMessage boolMsg =  new BooleanMessage();
					boolMsg.value = (((Boolean)obj));
					message_type_id = 1;
					message_data = GetByteFromProtoBuf(boolMsg);
				}else if(obj_class == typeof(Double)){
					DoubleMessage doubleMsg = new DoubleMessage();
					doubleMsg.value = (((Double)obj));
					message_type_id = 2;
					message_data = GetByteFromProtoBuf(doubleMsg);
				}
				else if (obj_class == typeof(Single)){
					FloatMessage floatMsg = new FloatMessage();
					floatMsg.value = (((Single)obj));
					message_type_id = 3;
					message_data = GetByteFromProtoBuf(floatMsg);
				}			
				else if (obj_class == typeof(Int32)){
					Int32Message int32Msg = new Int32Message();
					int32Msg.value = (((Int32)obj));
					message_type_id = 4;
					message_data = GetByteFromProtoBuf(int32Msg);
				}
				else if (obj_class == typeof(Int64)){
					Int64Message int64Msg = new Int64Message();
					int64Msg.value = (((Int64)obj));
					message_type_id = 5;
					message_data = GetByteFromProtoBuf(int64Msg);
				}
				else{
					return null;
				}			
			}else{				
				message_type_id = ProtobufMap.getType(obj_class);						
				if (message_type_id == 0)
					return null;
                object protoModel = CreateProtobufModel(message_type_id);
                if (protoModel == null)
                    return null;
                ProtobufConverterNet.fillInto(message_type_id,obj,protoModel);
				message_data = GetByteFromProtoBuf(protoModel);	
			}	
			message.message_type_id =message_type_id;		
			message.message_data = message_data;		
			return message;	
		}

						#if UNITY_EDITOR || !UNITY_IPHONE || ENABLE_JSB
                            private static TypeModel _serializer = RuntimeTypeModel.Default;
                            public static TypeModel serializer
                            {
                            get
                            {
                            return _serializer;
                            }
                            }
						#else
                            private static TypeModel _serializer = null;
                            public static TypeModel serializer
                            {
                            get
                            {
                            if ( _serializer == null )
                            {
                            _serializer = new com.cilugame.proto.AppModelSerializer ( );
                            }
                            return _serializer;
                            }
                            }
							#endif

		public static byte[] GetByteFromProtoBuf(object protobufData_)
		{
			byte[] buffer = null;
			using ( MemoryStream m = new MemoryStream ( ) )
			{
				serializer.Serialize(m, protobufData_);
				m.Position = 0;
				int length = (int)m.Length;
				buffer = new byte[length];
				m.Read(buffer, 0 ,length);
			}
			return buffer;
		}
		
		public static T DeserializeProtobuf<T> ( byte[] buffer ) where T : class
		{
			using ( MemoryStream m = new MemoryStream(buffer) )
			{
				return serializer.Deserialize(m, null, typeof(T)) as T;
			}
			
		}
		
		public static object DeserializeProtobuf ( byte[] buffer , System.Type type )
		{
			using ( MemoryStream m = new MemoryStream(buffer) )
			{
				return serializer.Deserialize(m, null, type);
			}
		}
		
		private static object CreateProtobufModel(int message_type_id){
			try {
				System.Type type = ProtobufMapX.getClass (message_type_id);
				if (type != null)
				{
					return Activator.CreateInstance(type);
				}
				else
				{
					return null;
				}
			}catch(Exception ex){
				UnityEngine.Debug.LogException(ex);
			}
			return null;
		}
	}	
}